{"openapi":"3.0.1","info":{"title":"Starsky API"},"servers":[{"url":"http://localhost:8080/api","description":"Generated server url"}],"tags":[{"name":"Employee availability","description":"Endpoints for schedule employee availability management"},{"name":"Version","description":"Endpoint for version information"},{"name":"Team","description":"Endpoints for user team management"},{"name":"Employee","description":"Endpoints for employee management"},{"name":"Invite","description":"Endpoints for user invite management"},{"name":"Schedule","description":"Endpoints for schedule management"},{"name":"Employee assignment","description":"Endpoints for schedule shift employee assignments"},{"name":"Authentication","description":"Endpoint for login"},{"name":"User","description":"Endpoints for user management"},{"name":"Schedule Shift","description":"Endpoints for schedule shift management"}],"paths":{"/user/schedules/{schedule_id}/assignments":{"get":{"tags":["Employee assignment"],"summary":"Get employee assignments","description":"Get all of the employee assignments for the specified schedule. ","operationId":"getEmployeeAssignments","parameters":[{"name":"schedule_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"description":"Response with a list of employee assignments.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/EmployeeAssignmentResponse"}}}}},"404":{"description":"Schedule does not exist."},"403":{"description":"Forbidden, user is not authenticated or does not have correct permissions."}},"security":[{"bearerAuth":[]}]},"put":{"tags":["Employee assignment"],"summary":"Create or update employee assignments","description":"Creates or updates a schedule with all of the specified schedule employee assignments. Please note that this operation can be destructive - it will always delete all of the previous/existing employee assignments (if they exist) for the specified schedule and create or update with the new ones. Authenticated user must have manager role.","operationId":"createEmployeeAssignment","parameters":[{"name":"schedule_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/CreateEmployeeAssignmentRequest"}}}},"required":true},"responses":{"204":{"description":"Created employee assignments successfully."},"403":{"description":"Forbidden, user is not authenticated or does not have manager role."},"400":{"description":"Request body invalid."},"404":{"description":"Schedule, shift or employee does not exist."},"422":{"description":"Invalid employee assignment date range, start timestamp occurs after end timestamp, date range exists or overlaps with existing assignment.."}},"security":[{"bearerAuth":[]}]}},"/users":{"post":{"tags":["User"],"summary":"Register a new user","description":"You can register a new user with the manager role by only supplying their name, email, password and job title. By adding a valid invite token (which the employee receives by mail) to the request body, the newly registered user will have the employee role.","operationId":"createUser","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateUserRequest"}}},"required":true},"responses":{"400":{"description":"User info invalid."},"409":{"description":"Email already exists."},"200":{"description":"Created a new user successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserResponse"}}}},"422":{"description":"Invite token invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InviteInvalidResponse"}}}}}}},"/user/teams":{"get":{"tags":["Team"],"summary":"Get user's teams","description":"Returns the teams the user owns (manager) or the ones he is part of (employee).","operationId":"getTeams","responses":{"403":{"description":"Forbidden, user is not authenticated."},"200":{"description":"Response with a list of teams.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/TeamResponse"}}}}}},"security":[{"bearerAuth":[]}]},"post":{"tags":["Team"],"summary":"Create a new team","description":"Create a new team - manager only route. Team name must be unique for this user, can't have 2 teams with same name.","operationId":"createTeam","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateTeamRequest"}}},"required":true},"responses":{"409":{"description":"Team name already exists."},"200":{"description":"Response with the newly created team.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/TeamResponse"}}}}},"400":{"description":"Request body invalid."},"403":{"description":"Forbidden, user is not authenticated or does not have the manager role."}},"security":[{"bearerAuth":[]}]}},"/user/teams/{team_id}/schedules":{"post":{"tags":["Schedule"],"summary":"Create a new schedule","description":"Creates a new schedule that is assigned to the specified team. Authenticated user must have manager role.","operationId":"createSchedule","parameters":[{"name":"team_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateScheduleRequest"}}},"required":true},"responses":{"404":{"description":"Team does not exist."},"403":{"description":"Forbidden, user is not authenticated or does not have manager role."},"400":{"description":"Request body invalid."},"200":{"description":"Created a new schedule successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ScheduleResponse"}}}},"422":{"description":"Invalid schedule date range (start timestamp occurs after end timestamp)."}},"security":[{"bearerAuth":[]}]}},"/user/teams/{team_id}/members/{user_id}":{"post":{"tags":["Team"],"summary":"Add a new team member","description":"Add a new team member (an employee with user ID) to a team - manager only route.","operationId":"createTeamMember","parameters":[{"name":"team_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"name":"user_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"404":{"description":"Team or employee does not exist."},"409":{"description":"Employee already present in the team."},"403":{"description":"Forbidden, user is not authenticated or does not have the manager role."},"202":{"description":"Employee successfully added to the team."}},"security":[{"bearerAuth":[]}]},"delete":{"tags":["Team"],"summary":"Delete team member","description":"Deletes the team member from the team. Authenticated user must have manager role.","operationId":"deleteTeamMember","parameters":[{"name":"team_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"name":"user_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"description":"Deleted the team member successfully."},"403":{"description":"Forbidden, user is not authenticated or does not have manager role."},"404":{"description":"Team or team member does not exist."}},"security":[{"bearerAuth":[]}]}},"/user/shifts/{shift_id}/availabilities":{"get":{"tags":["Employee availability"],"summary":"Get all employee availabilities","description":"Returns a list of all employee availabilities. Managers may access all employee availabilities, while employees will need to be in the specified schedule's team to access this resource.","operationId":"getEmployeeAvailabilities","parameters":[{"name":"shift_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"404":{"description":"Shift does not exist."},"200":{"description":"Response with a list of employee availabilities.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/EmployeeAvailabilityResponse"}}}}},"403":{"description":"Forbidden, user is not authenticated or does not have necessary permissions to access the schedule.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ForbiddenResponse"}}}}},"security":[{"bearerAuth":[]}]},"post":{"tags":["Employee availability"],"summary":"Create a new employee availability","description":"Creates a new employee availability that is assigned to the specified schedule shift. Authenticated user must have manager role.","operationId":"createEmployeeAvailability","parameters":[{"name":"shift_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateEmployeeAvailabilityRequest"}}},"required":true},"responses":{"404":{"description":"Shift does not exist."},"422":{"description":"Invalid employee availability date range, start timestamp occurs after end timestamp, date range exists or overlaps with existing availability.."},"403":{"description":"Forbidden, user is not authenticated or does not have manager role."},"400":{"description":"Request body invalid."},"200":{"description":"Created a new employee availability successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmployeeAvailabilityResponse"}}}}},"security":[{"bearerAuth":[]}]}},"/user/schedules/{schedule_id}/shifts":{"get":{"tags":["Schedule Shift"],"summary":"Get all schedule shifts","description":"Returns a list of all schedule shifts. Managers may access all schedule shifts, while employees will need to be in the specified schedule's team to access this resource.","operationId":"getScheduleShifts","parameters":[{"name":"schedule_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"404":{"description":"Schedule does not exist."},"200":{"description":"Response with a list of schedule shifts.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ScheduleShiftResponse"}}}}},"403":{"description":"Forbidden, user is not authenticated or does not have necessary permissions to access the schedule.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ForbiddenResponse"}}}}},"security":[{"bearerAuth":[]}]},"post":{"tags":["Schedule Shift"],"summary":"Create a new schedule shift","description":"Creates a new schedule shift that is assigned to the specified schedule. Authenticated user must have manager role.","operationId":"createScheduleShift","parameters":[{"name":"schedule_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateScheduleShiftRequest"}}},"required":true},"responses":{"422":{"description":"Invalid schedule shift date range (start timestamp occurs after end timestamp)."},"200":{"description":"Created a new schedule shift successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ScheduleShiftResponse"}}}},"403":{"description":"Forbidden, user is not authenticated or does not have manager role."},"400":{"description":"Request body invalid."},"404":{"description":"Schedule does not exist."}},"security":[{"bearerAuth":[]}]}},"/user/invites":{"get":{"tags":["Invite"],"summary":"Get all sent invites","description":"Returns the currently authenticated user's invites. Authenticated user must have manager role.","operationId":"getInvites","responses":{"403":{"description":"Forbidden, user is not authenticated or does not have manager role."},"200":{"description":"Response with a list of invites.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/InviteResponse"}}}}}},"security":[{"bearerAuth":[]}]},"post":{"tags":["Invite"],"summary":"Send a new invite","description":"Send an invite email to the specified employee so they can create a new Starsky account and join the manager's team. Authenticated user must have manager role.","operationId":"createInvite","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateInviteRequest"}}},"required":true},"responses":{"200":{"description":"Created a new invite successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InviteResponse"}}}},"403":{"description":"Forbidden, user is not authenticated or does not have manager role."},"409":{"description":"Email already exists."},"400":{"description":"Invite body invalid."}},"security":[{"bearerAuth":[]}]}},"/login":{"post":{"tags":["Authentication"],"summary":"Login an existing user","description":"Login an existing user with their email and password. The API will return a newly created JWT Bearer token with its expiry date.","operationId":"login","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LoginRequest"}}},"required":true},"responses":{"401":{"description":"Login failed."},"200":{"description":"Successfully logged in.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TokenResponse"}}}}}}},"/user":{"get":{"tags":["User"],"summary":"Get the authenticated user","description":"Returns the currently authenticated user's information.","operationId":"getUser","responses":{"403":{"description":"Forbidden, user is not authenticated."},"200":{"description":"Response with user information.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserResponse"}}}}},"security":[{"bearerAuth":[]}]},"patch":{"tags":["User"],"summary":"Update user","description":"Update specified properties of the currently authenticated user.","operationId":"updateSchedule","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateUserRequest"}}},"required":true},"responses":{"403":{"description":"Forbidden, user is not authenticated."},"400":{"description":"Request body invalid."},"409":{"description":"Email already exists."},"200":{"description":"Updated the user successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserResponse"}}}}},"security":[{"bearerAuth":[]}]}},"/user/teams/{team_id}":{"delete":{"tags":["Team"],"summary":"Delete team","description":"Deletes the team. This will also cascade delete team members. Authenticated user must have manager role.","operationId":"deleteTeam","parameters":[{"name":"team_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"404":{"description":"Team does not exist."},"403":{"description":"Forbidden, user is not authenticated or does not have manager role."},"204":{"description":"Deleted the team successfully."}},"security":[{"bearerAuth":[]}]},"patch":{"tags":["Team"],"summary":"Update team","description":"Update the specified team. Authenticated user must have manager role.","operationId":"updateTeam","parameters":[{"name":"team_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateTeamRequest"}}},"required":true},"responses":{"404":{"description":"Team does not exist."},"403":{"description":"Forbidden, user is not authenticated or does not have manager role."},"400":{"description":"Request body invalid."},"200":{"description":"Updated the team successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TeamResponse"}}}}},"security":[{"bearerAuth":[]}]}},"/user/shifts/{shift_id}":{"get":{"tags":["Schedule Shift"],"summary":"Get schedule shift","description":"Returns the specified schedule shifts. Managers may access all schedule shifts, while employees will need to be in the specified schedule's team to access this resource.","operationId":"getScheduleShift","parameters":[{"name":"shift_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"404":{"description":"Shift does not exist."},"200":{"description":"Response with the schedule shifts.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ScheduleShiftResponse"}}}},"403":{"description":"Forbidden, user is not authenticated or does not have necessary permissions to access the schedule.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ForbiddenResponse"}}}}},"security":[{"bearerAuth":[]}]},"delete":{"tags":["Schedule Shift"],"summary":"Delete schedule shift","description":"Delete a schedule shift. This will also cascade delete employee availabilities. Authenticated user must have manager role.","operationId":"deleteScheduleShift","parameters":[{"name":"shift_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"404":{"description":"Shift does not exist."},"204":{"description":"Deleted the schedule shift successfully."},"403":{"description":"Forbidden, user is not authenticated or does not have manager role."}},"security":[{"bearerAuth":[]}]},"patch":{"tags":["Schedule Shift"],"summary":"Update schedule shift","description":"Update any property of the specified shift. Authenticated user must have manager role.","operationId":"updateScheduleShift","parameters":[{"name":"shift_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateScheduleShiftRequest"}}},"required":true},"responses":{"403":{"description":"Forbidden, user is not authenticated or does not have manager role."},"200":{"description":"Updated the schedule shift successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ScheduleShiftResponse"}}}},"400":{"description":"Request body invalid."},"404":{"description":"Schedule shift does not exist."},"422":{"description":"Invalid date range (start timestamp occurs after end timestamp) supplied."}},"security":[{"bearerAuth":[]}]}},"/user/schedules/{schedule_id}":{"get":{"tags":["Schedule"],"summary":"Get schedule by id","description":"Returns a schedule with specified id. Managers can get all schedules they created, while employees may only get schedules from their team.","operationId":"getScheduleById","parameters":[{"name":"schedule_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"403":{"description":"Forbidden, user is not authenticated or does not have sufficient permissions."},"404":{"description":"Schedule does not exist."},"200":{"description":"Response with the schedule.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ScheduleResponse"}}}}},"security":[{"bearerAuth":[]}]},"delete":{"tags":["Schedule"],"summary":"Delete schedule","description":"Delete a specified schedule. This will also cascade delete schedule shifts and employee availabilities. Authenticated user must have manager role.","operationId":"deleteSchedule","parameters":[{"name":"schedule_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"description":"Deleted the schedule successfully."},"403":{"description":"Forbidden, user is not authenticated or does not have manager role."},"404":{"description":"Schedule does not exist."}},"security":[{"bearerAuth":[]}]},"patch":{"tags":["Schedule"],"summary":"Update schedule","description":"Update any property of the specified schedule. Authenticated user must have manager role.","operationId":"updateSchedule_1","parameters":[{"name":"schedule_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateScheduleRequest"}}},"required":true},"responses":{"422":{"description":"Invalid schedule date range (start timestamp occurs after end timestamp) supplied."},"200":{"description":"Updated the schedule successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ScheduleResponse"}}}},"403":{"description":"Forbidden, user is not authenticated or does not have manager role."},"400":{"description":"Request body invalid."},"404":{"description":"Schedule does not exist."}},"security":[{"bearerAuth":[]}]}},"/user/availabilities/{availability_id}":{"get":{"tags":["Employee availability"],"summary":"Get employee availability","description":"Returns the specified employee availability. Managers may access all employee availabilities, while employees will need to be in the specified schedule's team to access this resource.","operationId":"getEmployeeAvailability","parameters":[{"name":"availability_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"description":"Response with the employee availability.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmployeeAvailabilityResponse"}}}},"403":{"description":"Forbidden, user is not authenticated or does not have necessary permissions to access the schedule.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ForbiddenResponse"}}}},"404":{"description":"Employee availability does not exist."}},"security":[{"bearerAuth":[]}]},"delete":{"tags":["Employee availability"],"summary":"Delete employee availability","description":"Delete an employee availability. Authenticated user must have manager role.","operationId":"deleteEmployeeAvailability","parameters":[{"name":"availability_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"403":{"description":"Forbidden, user is not authenticated or does not have manager role."},"404":{"description":"Employee availability does not exist."},"204":{"description":"Deleted the employee availability successfully."}},"security":[{"bearerAuth":[]}]},"patch":{"tags":["Employee availability"],"summary":"Update employee availability","description":"Update any property (except actual employee) of the specified employee availability. Authenticated user must have manager role.","operationId":"updateEmployeeAvailability","parameters":[{"name":"availability_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateEmployeeAvailabilityRequest"}}},"required":true},"responses":{"200":{"description":"Updated the employee availability successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmployeeAvailabilityResponse"}}}},"422":{"description":"Invalid employee availability date range, start timestamp occurs after end timestamp, date range exists or overlaps with existing availability.."},"403":{"description":"Forbidden, user is not authenticated or does not have manager role."},"400":{"description":"Request body invalid."},"404":{"description":"Employee availability does not exist."}},"security":[{"bearerAuth":[]}]}},"/version":{"get":{"tags":["Version"],"summary":"Get current version","description":"Return the current version of the API which is specified inside gradle.build file.","operationId":"getVersion","responses":{"200":{"description":"Returns current API version.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VersionResponse"}}}}}}},"/user/teams/{team_id}/members":{"get":{"tags":["Team"],"summary":"Get team members","description":"Returns a list of team members of the specified team.","operationId":"getTeamMembers","parameters":[{"name":"team_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"404":{"description":"Team does not exist."},"403":{"description":"Forbidden, user is not authenticated."},"200":{"description":"Response with a list of team members.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/UserResponse"}}}}}},"security":[{"bearerAuth":[]}]}},"/user/schedules":{"get":{"tags":["Schedule"],"summary":"Get all schedules","description":"Returns a list of all schedules. Optionally you can filter by team by supplying the query parameter.","operationId":"getSchedules","parameters":[{"name":"team_id","in":"query","required":false,"schema":{"type":"integer","format":"int64"}}],"responses":{"403":{"description":"Forbidden, user is not authenticated or does not have manager role."},"200":{"description":"Response with a list of schedules.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ScheduleResponse"}}}}}},"security":[{"bearerAuth":[]}]}},"/user/schedules/{schedule_id}/solve":{"get":{"tags":["Schedule"],"summary":"Get solved schedule's employee assignments","description":"Returns the solved schedule with employee assignments. Manager only route.","operationId":"solveScheduleById","parameters":[{"name":"schedule_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"422":{"description":"Schedule cannot be solved.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ScheduleUnsolvableResponse"}}}},"403":{"description":"Forbidden, user is not authenticated or does not have sufficient permissions."},"404":{"description":"Schedule does not exist."},"200":{"description":"Response with the schedule.","content":{"application/json":{"schema":{"type":"string"}}}}},"security":[{"bearerAuth":[]}]}},"/user/invites/{invite_id}":{"get":{"tags":["Invite"],"summary":"Get sent invite","description":"Returns the invite by id. Authenticated user must have manager role.","operationId":"getInviteById","parameters":[{"name":"invite_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"description":"Response with invite.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InviteResponse"}}}},"403":{"description":"Forbidden, user is not authenticated or does not have manager role."},"404":{"description":"Invite does not exist."}},"security":[{"bearerAuth":[]}]},"delete":{"tags":["Invite"],"summary":"Delete invite","description":"Delete an invite. The invited employee will not be able to register after this operation.  Authenticated user must have manager role.","operationId":"deleteScheduleShift_1","parameters":[{"name":"invite_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"403":{"description":"Forbidden, user is not authenticated or does not have manager role."},"204":{"description":"Deleted the invite successfully."},"404":{"description":"Invite does not exist."}},"security":[{"bearerAuth":[]}]}},"/user/employees":{"get":{"tags":["Employee"],"summary":"Get the authenticated manager's employees","description":"Returns the currently authenticated user's employees - manager only route.","operationId":"getEmployees","responses":{"403":{"description":"Forbidden, user is not authenticated or does not have the manager role."},"200":{"description":"Response with all employees.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/UserResponse"}}}}}},"security":[{"bearerAuth":[]}]}}},"components":{"schemas":{"CreateEmployeeAssignmentRequest":{"required":["assignment_end","assignment_start","employee_id","shift_id"],"type":"object","properties":{"assignment_start":{"title":"Epoch timestamp of assignment start","type":"number","format":"double","example":1617032176.7171679},"assignment_end":{"title":"Epoch timestamp of assignment end","type":"number","format":"double","example":1617052176.7171679},"employee_id":{"type":"integer","format":"int64","example":1},"shift_id":{"type":"integer","format":"int64","example":3}}},"CreateUserRequest":{"required":["email","job_title","name"],"type":"object","properties":{"name":{"title":"User's name","maxLength":256,"minLength":0,"type":"string","example":"David Starsky"},"email":{"title":"User's email","type":"string","example":"david@example.com"},"password":{"maxLength":71,"minLength":8,"type":"string","example":"password"},"job_title":{"title":"User's job title","maxLength":256,"minLength":0,"type":"string","example":"Police detective"},"invite_token":{"title":"Optional token, if the user was invited by a manager","type":"string","format":"uuid","example":"acaa86b2-ce32-4911-89b8-e1e2a1d39a01"}}},"UserResponse":{"type":"object","properties":{"id":{"title":"User id","type":"integer","format":"int64","example":1},"name":{"title":"User name","type":"string","example":"David Starsky"},"email":{"title":"User email","type":"string","example":"david@example.com"},"role":{"title":"User role","type":"string","example":"EMPLOYEE"},"job_title":{"title":"User job title","type":"string","example":"Police detective"},"phone_number":{"title":"User phone number","type":"string","example":"+38641891123"},"notification_type":{"title":"User notification preference","type":"string","example":"EMAIL"}}},"InviteInvalidResponse":{"type":"object","properties":{"error":{"title":"Error describing the invite token issue","type":"string","example":"This invite token has expired."},"invite_token":{"title":"Invalid token","type":"string","example":"acaa86b2-ce32-4911-89b8-e1e2a1d39a01"}}},"CreateTeamRequest":{"required":["name"],"type":"object","properties":{"name":{"title":"Team name","type":"string","example":"My Police Squad"}}},"TeamResponse":{"type":"object","properties":{"id":{"title":"Team id","type":"integer","format":"int64","example":1},"name":{"title":"Team name","type":"string","example":"Harold's police squad"},"owner_name":{"title":"Team owner's name","type":"string","example":"Harold C. Dobey"}}},"CreateScheduleRequest":{"required":["max_hours_per_employee","max_hours_per_shift","max_shifts_per_employee","schedule_end","schedule_name","schedule_start"],"type":"object","properties":{"schedule_name":{"title":"Schedule name","type":"string","example":"Next week's schedule"},"schedule_start":{"title":"Epoch timestamp of schedule start","type":"number","format":"double","example":1617032176.7171679},"schedule_end":{"title":"Epoch timestamp of schedule end","type":"number","format":"double","example":1617102176.7171679},"max_hours_per_employee":{"title":"Maximum allowed hours per employee for the duration of the entire schedule","minimum":0,"type":"integer","format":"int32","example":40},"max_shifts_per_employee":{"title":"Maximum allowed shifts per employee for the duration of the entire schedule","minimum":0,"type":"integer","format":"int32","example":5},"max_hours_per_shift":{"title":"Maximum allowed hours per shift","minimum":0,"type":"integer","format":"int32","example":8}}},"ScheduleResponse":{"type":"object","properties":{"id":{"title":"Schedule id","type":"integer","format":"int64","example":1},"schedule_name":{"title":"Schedule name","type":"string","example":"Next week's schedule"},"schedule_start":{"title":"Epoch timestamp of schedule start","type":"number","format":"double","example":1617032176.7171679},"schedule_end":{"title":"Epoch timestamp of schedule end","type":"number","format":"double","example":1617102176.7171679},"team_id":{"title":"Schedule is assigned to this team","type":"integer","format":"int64","example":1},"max_hours_per_employee":{"title":"Maximum allowed hours per employee for the duration of the entire schedule","type":"integer","format":"int32","example":40},"max_shifts_per_employee":{"title":"Maximum allowed shifts per employee for the duration of the entire schedule","type":"integer","format":"int32","example":5},"max_hours_per_shift":{"title":"Maximum allowed hours per shift","type":"integer","format":"int32","example":8}}},"CreateEmployeeAvailabilityRequest":{"required":["availability_end","availability_start","employee_id","max_hours_per_shift"],"type":"object","properties":{"availability_start":{"title":"Epoch timestamp of availability start","type":"number","format":"double","example":1617032176.7171679},"availability_end":{"title":"Epoch timestamp of availability end","type":"number","format":"double","example":1617052176.7171679},"max_hours_per_shift":{"title":"Maximum hours per shift","minimum":1,"type":"integer","format":"int32","example":8},"employee_id":{"type":"integer","format":"int32","example":1}}},"EmployeeAvailabilityResponse":{"required":["employee_id"],"type":"object","properties":{"id":{"type":"integer","format":"int64","example":1},"shift_start":{"title":"Epoch timestamp of availability start","type":"number","format":"double","example":1617032176.7171679},"shift_end":{"title":"Epoch timestamp of availability end","type":"number","format":"double","example":1617052176.7171679},"max_hours_per_shift":{"title":"Maximum hours per shift","type":"integer","format":"int32","example":8},"employee_id":{"type":"integer","format":"int64","example":1}}},"CreateScheduleShiftRequest":{"required":["number_of_required_employees","shift_end","shift_start"],"type":"object","properties":{"shift_start":{"title":"Epoch timestamp of shift start","type":"number","format":"double","example":1617032176.7171679},"shift_end":{"title":"Epoch timestamp of shift end","type":"number","format":"double","example":1617052176.7171679},"number_of_required_employees":{"title":"Number of required employees for the entire shift","minimum":1,"type":"integer","format":"int32","example":5}}},"ScheduleShiftResponse":{"type":"object","properties":{"id":{"type":"integer","format":"int64","example":1},"shift_start":{"title":"Epoch timestamp of shift start","type":"number","format":"double","example":1617032176.7171679},"shift_end":{"title":"Epoch timestamp of shift end","type":"number","format":"double","example":1617052176.7171679},"number_of_required_employees":{"title":"Number of required employees for the entire shift","type":"integer","format":"int32","example":5}}},"CreateInviteRequest":{"required":["employee_email","employee_name"],"type":"object","properties":{"employee_name":{"title":"Employee's name","type":"string","example":"Kenneth Hutchinson"},"employee_email":{"title":"Employee's email address","type":"string","example":"kenneth@example.com"}}},"InviteResponse":{"type":"object","properties":{"id":{"title":"ID of the created invite","type":"integer","format":"int64","example":1},"employee_name":{"title":"Invited employee's name","type":"string","example":"Kenneth Hutchinson"},"employee_email":{"title":"Invited employee's email address","type":"string","example":"kenneth@example.com"},"has_registered":{"title":"Has the employee accepted the invite and registered yet","type":"boolean","example":false},"expires_on":{"title":"Epoch timestamp of the invite expiry date","type":"number","format":"double","example":1617032176.7171679},"expires_in":{"title":"Invite expires in x seconds","type":"integer","format":"int64","example":259200}}},"LoginRequest":{"required":["email","password"],"type":"object","properties":{"email":{"title":"E-mail address","type":"string","example":"mail@example.com"},"password":{"maxLength":71,"minLength":8,"type":"string","example":"password"}}},"TokenResponse":{"type":"object","properties":{"access_token":{"title":"JWT access token","type":"string","example":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9..."},"token_type":{"title":"Type of JWT token","type":"string","example":"Bearer"},"expires_on":{"title":"Epoch timestamp","type":"number","format":"double","example":1617032176.7171679},"expires_in":{"title":"Expires in x seconds","type":"integer","format":"int64","example":86400}}},"UpdateUserRequest":{"type":"object","properties":{"name":{"title":"User's name","maxLength":256,"minLength":0,"type":"string","example":"David Starsky"},"email":{"title":"User's email","type":"string","example":"david@example.com"},"password":{"maxLength":71,"minLength":8,"type":"string","example":"password"},"job_title":{"title":"User's job title","maxLength":256,"minLength":0,"type":"string","example":"Police detective"}}},"UpdateTeamRequest":{"type":"object","properties":{"name":{"title":"Team name","type":"string","example":"My Police Squad"}}},"UpdateScheduleShiftRequest":{"type":"object","properties":{"shift_start":{"title":"Epoch timestamp of shift start","type":"number","format":"double","example":1617032176.7171679},"shift_end":{"title":"Epoch timestamp of shift end","type":"number","format":"double","example":1617052176.7171679},"number_of_required_employees":{"title":"Number of required employees for the entire shift","minimum":1,"type":"integer","format":"int32","example":5}}},"UpdateScheduleRequest":{"type":"object","properties":{"schedule_name":{"title":"Schedule name","type":"string","example":"Next week's schedule"},"schedule_start":{"title":"Epoch timestamp of schedule start","type":"number","format":"double","example":1617032176.7171679},"schedule_end":{"title":"Epoch timestamp of schedule end","type":"number","format":"double","example":1617102176.7171679},"max_hours_per_employee":{"title":"Maximum allowed hours per employee for the duration of the entire schedule","minimum":0,"type":"integer","format":"int32","example":40},"max_shifts_per_employee":{"title":"Maximum allowed shifts per employee for the duration of the entire schedule","minimum":0,"type":"integer","format":"int32","example":5},"max_hours_per_shift":{"title":"Maximum allowed hours per shift","minimum":0,"type":"integer","format":"int32","example":8}}},"UpdateEmployeeAvailabilityRequest":{"type":"object","properties":{"availability_start":{"title":"Epoch timestamp of availability start","type":"number","format":"double","example":1617032176.7171679},"availability_end":{"title":"Epoch timestamp of availability end","type":"number","format":"double","example":1617052176.7171679},"max_hours_per_shift":{"title":"Maximum hours per shift","minimum":1,"type":"integer","format":"int32","example":8}}},"VersionResponse":{"type":"object","properties":{"version":{"title":"Current version","type":"string","example":"1.0.0"}}},"ForbiddenResponse":{"type":"object","properties":{"error":{"title":"Error describing the issue","type":"string","example":"Currently authenticated user does not have necessary permissions to access this resource."}}},"ScheduleUnsolvableResponse":{"type":"object","properties":{"error":{"title":"Error describing the issue","type":"string","example":"Schedule could not be solved because it does not have any shifts assigned."}}},"EmployeeAssignmentResponse":{"type":"object","properties":{"id":{"type":"integer","format":"int64","example":1},"assignment_start":{"title":"Epoch timestamp of assignment start","type":"number","format":"double","example":1617032176.7171679},"assignment_end":{"title":"Epoch timestamp of assignment end","type":"number","format":"double","example":1617052176.7171679},"employee_id":{"type":"integer","format":"int64","example":1},"shift_id":{"type":"integer","format":"int64","example":3}}}},"securitySchemes":{"bearerAuth":{"type":"http","scheme":"bearer","bearerFormat":"JWT"}}}}